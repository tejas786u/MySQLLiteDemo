- (void)getInforamtionFromWeb {        NSURL *url = [NSURL URLWithString:kGetUrl];        data = [NSData dataWithContentsOfURL:url];        NSError *error;        json = [NSJSONSerialization JSONObjectWithData:data options:kNilOptions error:&error];        result = [[NSMutableString alloc] init];        for (NSObject * obj in json)        {            [result appendString:[obj description]];        }}-(void)initiatSqlite{    // Get the documents directory    dirPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);    docsDir = dirPaths[0];    // Build the path to the database file    _databasePath = [[NSString alloc]                     initWithString: [docsDir stringByAppendingPathComponent:                                      @"Questions.db"]];    NSFileManager *filemgr = [NSFileManager defaultManager];    if ([filemgr fileExistsAtPath: _databasePath ] == NO)    {        const char *dbpath = [_databasePath UTF8String];        if (sqlite3_open(dbpath, &_contactDB) == SQLITE_OK)        {            char *errMsg;            const char *sql_stmt =            "CREATE TABLE IF NOT EXISTS Questions (ID INTEGER PRIMARY KEY AUTOINCREMENT, Question Text, AnswerA Text, AnswerB Text, AnswerC Text, AnswerD Text, CorrectAnswer Text, Explanation Text)";            if (sqlite3_exec(_contactDB, sql_stmt, NULL, NULL, &errMsg) != SQLITE_OK)            {                [self Worningtitle:@"Error" Message:@"Failed to create table"];            }            sqlite3_close(_contactDB);        } else {            [self Worningtitle:@"Error" Message:@"Failed to open/create database"];        }    }}- (void) insertData{    sqlite3_stmt    *statement;    const char *dbpath = [_databasePath UTF8String];    if (sqlite3_open(dbpath, &_contactDB) == SQLITE_OK)    {        NSString *insertSQL = @"INSERT INTO Questions VALUES (result)";        const char *insert_stmt = [insertSQL UTF8String];        NSLog(@"%s",insert_stmt);        sqlite3_prepare_v2(_contactDB, insert_stmt, -1, &statement, NULL);        sqlite3_bind_text(statement, 1, [result UTF8String], -1, SQLITE_TRANSIENT);        if (sqlite3_step(statement) == SQLITE_DONE)        {            NSLog(@"Product added");        } else {            NSLog(@"Failed to add Product");        }        sqlite3_finalize(statement);        sqlite3_close(_contactDB);    }}-(void)MainFunctionCalling{	NSLog(@"Main Function Called...");}